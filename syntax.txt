# Cleanup
SEP SEP	SEP
LBRA SEP	LBRA
RBRA SEP	RBRA

# "Booleans"
TRUE	val.TNumber
FALSE	val.TNumber

# Parentheses
LPAR val.Value RPAR	val.ParValue

# Functions
FUN ParList<TName>|ParValue<TName> instr.Instruction	val.Function
FUN LPAR RPAR instr.Instruction	val.Function

val.Value ParList<val.Value>	val.FunCall
val.Value ParValue	val.FunCall
val.Value LPAR RPAR	val.FunCall

# Arrays
LSBRA TokenList|val.Value RSBRA	val.TArray
LSBRA RSBRA	val.TArray

# Lists
val.Value|TokenList COMMA val.Value	TokenList
LPAR TokenList RPAR	ParList

val.Value TArray	val.ArrayAccess

# Unary
(-val.Value) DIV val.Value	op.Opposite
(-val.Value) MINUS val.Value	op.Inverse
QUESTION val.Value	op.Nullity
NOT val.Value	op.Not

# Power
val.Value SQUARE	op.Square
val.Value POW val.Value	op.Power

# Basic operation order groups
val.Value MUL|DIV|MOD val.Value	op.MulOperation
val.Value PLUS|MINUS val.Value	op.AddOperation
val.Value GREATER|GREAT_EQ|LOWER|LOW_EQ val.Value	op.CompOperation
val.Value EQUAL|NOT_EQ val.Value	op.EqOperation

# Boolean operations
val.Value AND val.Value	op.And
val.Value OR val.Value	op.Or

# Instructions
LET TName AFF val.Value	instr.Definition
TName AFF val.Value	instr.Affectation
RETURN val.Value	instr.Return

TName PLUS (-val.Value)	instr.Increment
TName MINUS (-val.Value)	instr.Decrement

FunCall	instr.FunCallInstr
LBRA instr.Instruction RBRA	instr.BraInstruction

# Blocks
IF ParValue instr.Instruction	instr.IfBlock
ELSE instr.Instruction	instr.ElseBlock
instr.IfBlock instr.ElseBlock	instr.IfElseBlock
instr.IfBlock SEP instr.ElseBlock	instr.IfElseBlock
IF ParValue LOOP instr.Instruction	instr.LoopBlock

# Instruction reducing
instr.Instruction SEP instr.Instruction	instr.InstructionList
instr.Instruction instr.Instruction	instr.InstructionList

# Final cleanup
instr.Instruction SEP	instr.ReduceInstruction
SEP instr.Instruction	instr.ReduceInstruction
val.Value SEP	SEP